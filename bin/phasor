#!/usr/bin/env python
#-*- mode: python -*-

import sys, numpy, h5py, pylab, matplotlib
sys.path.append(".")
from numpy import abs
from numpy.fft import fft, fftshift
from matplotlib import cm, _pylab_helpers, interactive
from mpl_toolkits.mplot3d import Axes3D
from os.path import dirname


hdf5 = h5py.File(sys.argv[1], "r")

for (key, value) in hdf5.attrs.items():
    print key, "=>", value

freq = hdf5.attrs["frequency"]
deltat = hdf5.attrs["dt"]
print "need records: ", 1.0/(freq*deltat)
periodForPhasor = 1

shape = [int(periodForPhasor/(freq*deltat))]
shape.extend(hdf5["/timeline/1/%s" % sys.argv[2]].shape)

start = len(hdf5["timeline"]) - shape[0]
start = 2500 - shape[0]
t = numpy.arange(start,start+shape[0])
f = numpy.arange(-shape[0]/2,shape[0]/2)/(deltat*shape[0])

timedomain = numpy.zeros(shape)
for i in range(shape[0]):
    timedomain[i] = hdf5["timeline"][str(start+i)][sys.argv[2]]

freqdomain = fftshift(abs(fft(timedomain, axis=0)), axes=(0,))/shape[0]

# for i in range(len(f)):
#     if abs(f[i]) == freq:
#         imshow(freqdomain[i], "/tmp/phasor-%.3d", i)
#         print i

for i in range(shape[0]):
    if numpy.round(f[i]/freq) == 1.0:
        fig = pylab.figure()
        im = fig.gca().imshow(freqdomain[i][50:251,50:251], norm=matplotlib.colors.Normalize(0.45, 0.9, True))
        fig.colorbar(im)
        fig.savefig("%s/phasor-%s.png" %(dirname(sys.argv[1]), f[i]))
        _pylab_helpers.Gcf.destroy_fig(fig)

