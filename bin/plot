#!/usr/bin/env python

import matplotlib, pylab, numpy, h5py, os
from multiprocessing import Process
from matplotlib import _pylab_helpers, cm

processes = []

def plot(field, pattern, id, range=[-1,1]):
      print id
      fig = pylab.figure()
      ax = fig.gca()
      ax.plot(field)
      ax.set_ylim(range)
      ax.set_xlim(0,field.shape[0]-1)
      fig.savefig(pattern % id)
      _pylab_helpers.Gcf.destroy_fig(fig)
      return None

hdf5 = h5py.File("result/result.hdf5","r")

for t in hdf5["timeline"].values():
    processes.append(Process(target=plot, args=(numpy.array(t.get("ex")), "result/testing-%.3s.png", os.path.basename(t.name))))
    # plot( numpy.array(t.get("ex")), "result/oned-testing-%.3s.png", os.path.basename(t.name))

head = 0
step = 10
while head < len(processes):
    head = head + step
    for p in processes[head:head+step]:
      p.start()
    for p in processes[head:head+step]:
      p.join()

hdf5.close()
